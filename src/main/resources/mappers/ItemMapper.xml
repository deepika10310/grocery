<?xml version = "1.0" encoding = "UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.grocery.on.wheels.dao.ItemMapper">
<insert id="addItem" parameterType="com.grocery.on.wheels.model.Item">
	INSERT INTO item_info (item_id, item_name, item_code, item_unit, item_unit_count, item_icon, item_qrbar_code, create_dt, create_id, update_dt, update_id)
	 VALUES (#{itemId}, #{itemName}, #{itemCode}, #{itemUnit}, #{itemUnitCount}, #{itemIcon}, #{itemQrBarCode}, now(), 'CID', now(), 'UID');
</insert>

<insert id="addItemPrice">
	INSERT IGNORE INTO item_price_map (item_price_id,item_id, mrp, cp, sp)
	 VALUES (
			#{itemPrice.itemPriceId},
            #{itemId},
            #{itemPrice.mrp},
            #{itemPrice.cp},
            #{itemPrice.sp}
			);	
</insert>

<insert id="addInvItemMap">
INSERT IGNORE INTO inventory_item_map (inventory_id, item_price_id, exp_dt, item_count, purchase_pending, sale_pending)
VALUES 
 <foreach collection="itemPriceExp" item="priceExp" index="index" open="(" separator="),("  close=")">
     #{inventoryId},
     #{itemPriceId},
     #{priceExp.expDate},
     #{priceExp.itemCount},
	 #{priceExp.purchase_pending},
	 #{priceExp.sale_pending}
</foreach>
</insert>

<update id="editItem">
	update item_info
	set 
	item_name = #{item.itemName}, 
	item_code = #{item.itemCode}, 
	item_unit = #{item.itemUnit}, 
	item_unit_count = #{item.itemUnitCount}, 
	<if test="iconFileUpdate == true">
	item_icon = #{item.itemIcon}, 
	</if>
	<if test="qrFileUpdate == true">
	item_qrbar_code = #{item.itemQrBarCode}, 
	</if>
	update_dt = now()
	where item_id = #{item.itemId}
</update>

<delete id="deleteItemPrice" parameterType="com.grocery.on.wheels.model.ItemPrice">
	delete from item_price_map where item_price_id in 
	<foreach item="price" collection="itemPrices" separator="," open="(" close=")">
        #{price.itemPriceId}
    </foreach>
</delete>

<delete id="deleteExpiry" parameterType="com.grocery.on.wheels.model.ItemPrice">
	delete from item_exp_map where item_price_id in 
	<foreach item="price" collection="itemPrices" separator="," open="(" close=")">
        #{price.itemPriceId}
    </foreach>
</delete>

<delete id="clearItem">
delete from `item_price_map`;
delete from `item_info`;
</delete>

</mapper>